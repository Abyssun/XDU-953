(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{362:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200307539.acd7e521.png"},363:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200220143.d20743f0.png"},364:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200351157.949bf267.png"},365:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200406644.d1e89650.png"},366:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200424933.6965b423.png"},367:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200444965.e9089696.png"},368:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200503697.06ba811b.png"},369:function(v,_,i){v.exports=i.p+"assets/img/image-20240108200516698.73040444.png"},406:function(v,_,i){"use strict";i.r(_);var l=i(14),p=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"单选-2-30"}},[v._v("单选（2/30）")]),v._v(" "),_("p",[v._v("1.算法能识别出错误的输入数据并进行适当的处理和反应，称为算法的（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 健壮性")]),v._v(" "),_("li",[v._v("B. 正确性")]),v._v(" "),_("li",[v._v("C. 并行性")]),v._v(" "),_("li",[v._v("D. 时间复杂度")])]),v._v(" "),_("p",[v._v("2.从一个具有 n个结点的单链表中查找其值等于x 的结点时，在查找成功的情况下，需要平均比较的节点个数是（）")]),v._v(" "),_("ul",[_("li",[v._v("A. n")]),v._v(" "),_("li",[v._v("B. n/2")]),v._v(" "),_("li",[v._v("C. (n-1)2")]),v._v(" "),_("li",[v._v("D. (n+1)2")])]),v._v(" "),_("p",[v._v("3.设有一个双端队列，元素进入该队列的次序为 abcd，则既不能由输入受限双端队列得到，也不能由输出受限双端队列得到的输出序列为（）")]),v._v(" "),_("ul",[_("li",[v._v("A. dbca")]),v._v(" "),_("li",[v._v("B. dcba")]),v._v(" "),_("li",[v._v("C. dbac")]),v._v(" "),_("li",[v._v("D. dcab")])]),v._v(" "),_("p",[v._v("4.下列关于串的叙述中，正确的是（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 一个串的字符个数即该串的长度")]),v._v(" "),_("li",[v._v("B. 空串是由一个空格字符组成的串")]),v._v(" "),_("li",[v._v("C. 一个串的长度至少是1")]),v._v(" "),_("li",[v._v("D. 若两个串S和S的长度相同，则这两个串相等")])]),v._v(" "),_("p",[v._v("5.对一棵满二叉树，m 个树叶，n 个结点，深度为 k，则（）")]),v._v(" "),_("ul",[_("li",[v._v("A. k+m = 2n")]),v._v(" "),_("li",[v._v("B. n = k+m")]),v._v(" "),_("li",[v._v("C. n = 2k-1")]),v._v(" "),_("li",[v._v("D. m = k-1")])]),v._v(" "),_("p",[v._v("6.一个具有 10 个顶点的有向图中，所有顶点的入度之和与所有顶点的出度之和的差等于（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 20")]),v._v(" "),_("li",[v._v("B. 5")]),v._v(" "),_("li",[v._v("C. 0")]),v._v(" "),_("li",[v._v("D. 2")])]),v._v(" "),_("p",[v._v("7.对于线性表(7，34，55，25，64，46，20，10) 进行列存储时，若选用 H(K)=K%9 作为散列函数，则散列地址为1的元素有（）个")]),v._v(" "),_("ul",[_("li",[v._v("A. 1")]),v._v(" "),_("li",[v._v("C. 3")]),v._v(" "),_("li",[v._v("B. 2")]),v._v(" "),_("li",[v._v("D. 4")])]),v._v(" "),_("p",[v._v("8.采用贪心算法不能求解的问题是（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 0-1背包问题")]),v._v(" "),_("li",[v._v("B. 活动安排问题")]),v._v(" "),_("li",[v._v("C. 找零钱问题")]),v._v(" "),_("li",[v._v("D. 背包问题")])]),v._v(" "),_("p",[v._v("9.用数组"),_("code",[v._v("Q[m]")]),v._v("存放循环队列的元素，rear 和 len 分别表示该队列的队尾元素的位置和队列的长度，则队列第一个元素的位置是（）")]),v._v(" "),_("ul",[_("li",[v._v("A. rear-len")]),v._v(" "),_("li",[v._v("B. (rear+m-len) % m")]),v._v(" "),_("li",[v._v("C. m-len")]),v._v(" "),_("li",[v._v("D. rear-len+m")])]),v._v(" "),_("p",[v._v("10.线性表若采用链表存储结构时，要求内存中可用存储单元的地址（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 必须是连续的")]),v._v(" "),_("li",[v._v("B. 部分地址必须是连续的")]),v._v(" "),_("li",[v._v("C. 一定是不连续的")]),v._v(" "),_("li",[v._v("D. 连续不连续都可以")])]),v._v(" "),_("p",[v._v("11.在头指针为 head 且表长大于 的单循环链表中，指针 p 指向表中某个结点，若"),_("code",[v._v("p->next->next = head")]),v._v("，则（）")]),v._v(" "),_("ul",[_("li",[v._v("A. p 指向头结点")]),v._v(" "),_("li",[v._v("B. p指向尾结点")]),v._v(" "),_("li",[v._v("C. *p 的直接后继是头结点")]),v._v(" "),_("li",[v._v("D. *p的直接后继是尾结点")])]),v._v(" "),_("p",[v._v("12快速排序在最坏的情况下的时间复杂度是（）")]),v._v(" "),_("ul",[_("li",[v._v("A. O(log2n)")]),v._v(" "),_("li",[v._v("B. O(nlog2n)")]),v._v(" "),_("li",[v._v("C. O(n^2)")]),v._v(" "),_("li",[v._v("D. O(n^3)")])]),v._v(" "),_("p",[v._v("13.设某棵三叉树中有 45 个结点，则该三叉树的最小高度为（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 3")]),v._v(" "),_("li",[v._v("B. 4")]),v._v(" "),_("li",[v._v("C. 5")]),v._v(" "),_("li",[v._v("D. 6")])]),v._v(" "),_("p",[v._v("14.设n个元素进栈的序列是 1，2，3，...，n，其输出序列是 p1，p2,...,pn，若 p1 = 3.则 p2 的值（）")]),v._v(" "),_("ul",[_("li",[v._v("A. 一定是1")]),v._v(" "),_("li",[v._v("B. 一定是 2")]),v._v(" "),_("li",[v._v("C. 可能是1")]),v._v(" "),_("li",[v._v("D. 可能是2")])]),v._v(" "),_("p",[v._v("15.在长度为 的顺序表的第 (lSSn1)个位置上入一个元素，元素的移动次数为（）")]),v._v(" "),_("ul",[_("li",[v._v("A. n-i+1")]),v._v(" "),_("li",[v._v("B. n-i")]),v._v(" "),_("li",[v._v("C. i")]),v._v(" "),_("li",[v._v("D. i-1")])]),v._v(" "),_("h2",{attrs:{id:"判断-1-15"}},[v._v("判断（1/15）")]),v._v(" "),_("p",[v._v("1.链式栈与顺序栈相比，一个明显的优点是通常不会出现栈满的情况（）")]),v._v(" "),_("p",[v._v("2.在一个顺序存储的循环队列中，队头指针指向队头元素的位置（）")]),v._v(" "),_("p",[v._v("3.数组一旦建立，结构中的元素个数和元素间的关系就不再发生变化。因此，一般都采用链式存储的方法来表示数组（）")]),v._v(" "),_("p",[v._v("4.从串中取若干个字符组成的字符序列称为串的子串（）")]),v._v(" "),_("p",[v._v("5.一个无向图的邻接矩阵中各元亲之和与图中边的条数相等（）")]),v._v(" "),_("p",[v._v("6.具有6个顶点的无向图至少有 6 条边才能确保是一个连通图（）")]),v._v(" "),_("p",[v._v("7.顺序表的特点是:逻辑上相邻的元素，存储在物理位置也相邻的单元中（）")]),v._v(" "),_("p",[v._v("8.线性表的各种基本运算在顺序存储结构上的实现均比在链式存储结构上的实现效率要低（）")]),v._v(" "),_("p",[v._v("9.在散列法中，中个可用的散列函数必须保证绝对不产生冲突（）")]),v._v(" "),_("p",[v._v("10.在任何情况下，快速排序方法的时间性能总是最优的（）")]),v._v(" "),_("p",[v._v("11.一个问题是否具有最优子结构性质是该问题是否可以用动态规划法求解的重要前提（）")]),v._v(" "),_("p",[v._v("12.层次结构设计方法有两种:自顶向下和自底向上（）")]),v._v(" "),_("p",[v._v("13.数据结构与算法的本质联系表现在失去一方，另一方将没有任何意义（）")]),v._v(" "),_("p",[v._v("14.二叉树是一棵无序树（）")]),v._v(" "),_("p",[v._v("15.对于一棵具有 n个结点的任何二叉树，进行先序、中序或后序的任一种次序遍历的空间复杂度为 O(log2n)（）")]),v._v(" "),_("h2",{attrs:{id:"填空-2-30"}},[v._v("填空（2/30）")]),v._v(" "),_("img",{attrs:{src:i(362)}}),v._v(" "),_("img",{attrs:{src:i(363)}}),v._v(" "),_("h2",{attrs:{id:"问题求解"}},[v._v("问题求解")]),v._v(" "),_("img",{attrs:{src:i(364)}}),v._v(" "),_("img",{attrs:{src:i(365)}}),v._v(" "),_("img",{attrs:{src:i(366)}}),v._v(" "),_("h2",{attrs:{id:"算法设计"}},[v._v("算法设计")]),v._v(" "),_("img",{attrs:{src:i(367)}}),v._v(" "),_("img",{attrs:{src:i(368)}}),v._v(" "),_("img",{attrs:{src:i(369)}})])}),[],!1,null,null,null);_.default=p.exports}}]);